name: publish

on:
  workflow_dispatch:
    inputs:
      is_release:
        description: "Set to true if a release version."
        required: true
        default: false
        type: boolean
      sha:
        description: "The git SHA to use for release.  Only set if needing to publish"
        required: false
        default: ""
        type: string
      version:
        description: "The Release version.  Allowed format: x.y.z[-alphaN | -betaN | -rcN | -devN | -postN]"
        required: false
        default: ""
        type: string

jobs:
  validate-input:
    runs-on: ubuntu-22.04
    steps:
      - name: If release, verify SHA is provided
        if: inputs.is_release && inputs.sha == ''
        run: |
          echo "::error If releasing, must provide a SHA."
          exit 1
      - name: If release, verify SHA is provided
        if: inputs.is_release && inputs.version == ''
        run: |
          echo "::error If releasing, must provide a version."
          exit 1

  build-wheels:
    uses: ./.github/workflows/build_wheels.yaml
    with:
      is_release: ${{ inputs.is_release }}
      sha: ${{ inputs.is_release }}
      version: ${{ inputs.is_release }}

  upload_test_pypi:
    name: Upload to test PyPI (test)
    needs: build-wheels
    runs-on: ubuntu-22.04
    # permissions:
    #   # This permission is required for pypi's "trusted publisher" feature
    #   id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: pycbcc-artifact-*
          path: dist
          merge-multiple: true
          run-id: ${{ needs.build-wheels.outputs.workflow_run_id }}
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Confirm Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel twine
      - name: Download CI wheel checks
        run: |
          curl -o check_wheels.py ${CI_SCRIPTS_URL}/ci_scripts/check_wheels.py
        env:
          CI_SCRIPTS_URL: "https://raw.githubusercontent.com/couchbaselabs/sdkbuild-jenkinsfiles/master/python"
      - name: Check wheels
        run: |
          cd dist
          python ../check_wheels.py -versions=$PYTHON_VERSIONS -x86_64=$X86_64_PLATFORMS -arm64=$ARM64_PLATFORMS
      - name: Twine validate
        run: |
          ls -alh dist
          twine check dist/*
